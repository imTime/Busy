(function() {
	//农历每一年，对应公历的数据
	var lunarInfo = [
		[8, "0131", "0301", "0331", "0429", "0528", "0627", "0726", "0825", "0924", "1023", "1122", "1222", "1320"], 	//1900
		[0, "0219", "0320", "0419", "0518", "0616", "0716", "0814", "0913", "1012", "1111", "1211", "1310"], 	//1901
		[0, "0208", "0310", "0408", "0508", "0606", "0705", "0804", "0902", "1002", "1031", "1130", "1230"], 	//1902
		[5, "0129", "0227", "0329", "0427", "0527", "0625", "0724", "0823", "0921", "1020", "1119", "1219", "1317"], 	//1903
		[0, "0216", "0317", "0416", "0515", "0614", "0713", "0811", "0910", "1009", "1107", "1207", "1306"], 	//1904
		[0, "0204", "0306", "0405", "0504", "0603", "0703", "0801", "0830", "0929", "1028", "1127", "1226"], 	//1905
		[4, "0125", "0223", "0325", "0424", "0523", "0622", "0721", "0820", "0918", "1018", "1116", "1216", "1314"], 	//1906
		[0, "0213", "0314", "0413", "0512", "0611", "0710", "0809", "0908", "1007", "1106", "1205", "1304"], 	//1907
		[0, "0202", "0303", "0401", "0430", "0530", "0629", "0728", "0827", "0925", "1025", "1124", "1223"], 	//1908
		[2, "0122", "0220", "0322", "0420", "0519", "0618", "0717", "0816", "0914", "1014", "1113", "1213", "1311"], 	//1909
		[0, "0210", "0311", "0410", "0509", "0607", "0707", "0805", "0904", "1003", "1102", "1202", "1301"], 	//1910
		[6, "0130", "0301", "0330", "0429", "0528", "0626", "0726", "0824", "0922", "1022", "1121", "1220", "1319"], 	//1911
		[0, "0218", "0319", "0417", "0517", "0615", "0714", "0813", "0911", "1010", "1109", "1209", "1307"], 	//1912
		[0, "0206", "0308", "0407", "0506", "0605", "0704", "0802", "0901", "0930", "1029", "1128", "1227"], 	//1913
		[5, "0126", "0225", "0327", "0425", "0525", "0623", "0723", "0821", "0920", "1019", "1117", "1217", "1315"], 	//1914
		[0, "0214", "0316", "0414", "0514", "0613", "0712", "0811", "0909", "1009", "1107", "1207", "1305"], 	//1915
		[0, "0203", "0304", "0403", "0502", "0601", "0630", "0730", "0829", "0927", "1027", "1125", "1225"], 	//1916
		[2, "0123", "0222", "0323", "0421", "0521", "0619", "0719", "0818", "0916", "1016", "1115", "1214", "1313"], 	//1917
		[0, "0211", "0313", "0411", "0510", "0609", "0708", "0807", "0905", "1005", "1104", "1203", "1302"], 	//1918
		[7, "0201", "0302", "0401", "0430", "0529", "0628", "0727", "0825", "0924", "1024", "1122", "1222", "1321"], 	//1919
		[0, "0220", "0320", "0419", "0518", "0616", "0716", "0814", "0912", "1012", "1110", "1210", "1309"], 	//1920
		[0, "0208", "0310", "0408", "0508", "0606", "0705", "0804", "0902", "1001", "1031", "1129", "1229"], 	//1921
		[5, "0128", "0227", "0328", "0427", "0527", "0625", "0724", "0823", "0921", "1020", "1119", "1218", "1317"], 	//1922
		[0, "0216", "0317", "0416", "0516", "0614", "0714", "0812", "0911", "1010", "1108", "1208", "1306"], 	//1923
		[0, "0205", "0305", "0404", "0504", "0602", "0702", "0801", "0830", "0929", "1028", "1127", "1226"], 	//1924
		[4, "0124", "0223", "0324", "0423", "0522", "0621", "0721", "0819", "0918", "1018", "1116", "1216", "1314"], 	//1925
		[0, "0213", "0314", "0412", "0512", "0610", "0710", "0808", "0907", "1007", "1105", "1205", "1304"], 	//1926
		[0, "0202", "0304", "0402", "0501", "0531", "0629", "0729", "0827", "0926", "1025", "1124", "1224"], 	//1927
		[2, "0123", "0221", "0322", "0420", "0519", "0618", "0717", "0815", "0914", "1013", "1112", "1212", "1311"], 	//1928
		[0, "0210", "0311", "0410", "0509", "0607", "0707", "0805", "0903", "1003", "1101", "1201", "1231"], 	//1929
		[6, "0130", "0228", "0330", "0429", "0528", "0626", "0726", "0824", "0922", "1022", "1120", "1220", "1319"], 	//1930
		[0, "0217", "0319", "0418", "0517", "0616", "0715", "0814", "0912", "1011", "1110", "1209", "1308"], 	//1931
		[0, "0206", "0307", "0406", "0506", "0604", "0704", "0802", "0901", "0930", "1029", "1128", "1227"], 	//1932
		[5, "0126", "0224", "0326", "0425", "0524", "0623", "0722", "0821", "0920", "1019", "1118", "1217", "1315"], 	//1933
		[0, "0214", "0315", "0414", "0513", "0612", "0712", "0810", "0909", "1008", "1107", "1207", "1305"], 	//1934
		[0, "0204", "0305", "0403", "0503", "0601", "0701", "0730", "0829", "0928", "1027", "1126", "1226"], 	//1935
		[3, "0124", "0223", "0323", "0421", "0521", "0619", "0718", "0817", "0916", "1015", "1114", "1214", "1313"], 	//1936
		[0, "0211", "0313", "0411", "0510", "0609", "0708", "0806", "0905", "1004", "1103", "1203", "1302"], 	//1937
		[7, "0131", "0302", "0401", "0430", "0529", "0628", "0727", "0825", "0924", "1023", "1122", "1222", "1320"], 	//1938
		[0, "0219", "0321", "0420", "0519", "0617", "0717", "0815", "0913", "1013", "1111", "1211", "1309"], 	//1939
		[0, "0208", "0309", "0408", "0507", "0606", "0705", "0804", "0902", "1001", "1031", "1129", "1229"], 	//1940
		[6, "0127", "0226", "0328", "0426", "0526", "0625", "0724", "0823", "0921", "1020", "1119", "1218", "1317"], 	//1941
		[0, "0215", "0317", "0415", "0515", "0614", "0713", "0812", "0910", "1010", "1108", "1208", "1306"], 	//1942
		[0, "0205", "0306", "0405", "0504", "0603", "0702", "0801", "0831", "0929", "1029", "1127", "1227"], 	//1943
		[4, "0125", "0224", "0324", "0423", "0522", "0621", "0720", "0819", "0917", "1017", "1116", "1215", "1314"], 	//1944
		[0, "0213", "0314", "0412", "0512", "0610", "0709", "0808", "0906", "1006", "1105", "1205", "1303"], 	//1945
		[0, "0202", "0304", "0402", "0501", "0531", "0629", "0728", "0827", "0925", "1025", "1124", "1223"], 	//1946
		[2, "0122", "0221", "0323", "0421", "0520", "0619", "0718", "0816", "0915", "1014", "1113", "1212", "1311"], 	//1947
		[0, "0210", "0311", "0409", "0509", "0607", "0707", "0805", "0903", "1003", "1101", "1201", "1230"], 	//1948
		[7, "0129", "0228", "0329", "0428", "0528", "0626", "0726", "0824", "0922", "1022", "1120", "1220", "1318"], 	//1949
		[0, "0217", "0318", "0417", "0517", "0615", "0715", "0814", "0912", "1011", "1110", "1209", "1308"], 	//1950
		[0, "0206", "0308", "0406", "0506", "0605", "0704", "0803", "0901", "1001", "1030", "1129", "1228"], 	//1951
		[5, "0127", "0225", "0326", "0424", "0524", "0622", "0722", "0820", "0919", "1019", "1117", "1217", "1315"], 	//1952
		[0, "0214", "0315", "0414", "0513", "0611", "0711", "0810", "0908", "1008", "1107", "1206", "1305"], 	//1953
		[0, "0203", "0305", "0403", "0503", "0601", "0630", "0730", "0828", "0927", "1027", "1126", "1225"], 	//1954
		[3, "0124", "0222", "0324", "0422", "0522", "0620", "0719", "0818", "0916", "1016", "1114", "1214", "1313"], 	//1955
		[0, "0212", "0312", "0411", "0510", "0609", "0708", "0806", "0905", "1004", "1103", "1203", "1301"], 	//1956
		[8, "0131", "0302", "0331", "0430", "0529", "0628", "0727", "0825", "0924", "1023", "1122", "1221", "1320"], 	//1957
		[0, "0218", "0320", "0419", "0519", "0617", "0717", "0815", "0913", "1013", "1111", "1211", "1309"], 	//1958
		[0, "0208", "0309", "0408", "0508", "0606", "0706", "0804", "0903", "1002", "1101", "1130", "1230"], 	//1959
		[6, "0128", "0227", "0327", "0426", "0525", "0624", "0724", "0822", "0921", "1020", "1119", "1218", "1317"], 	//1960
		[0, "0215", "0317", "0415", "0515", "0613", "0713", "0811", "0910", "1010", "1108", "1208", "1306"], 	//1961
		[0, "0205", "0306", "0405", "0504", "0602", "0702", "0731", "0830", "0929", "1028", "1127", "1227"], 	//1962
		[4, "0125", "0224", "0325", "0424", "0523", "0621", "0721", "0819", "0918", "1017", "1116", "1216", "1315"], 	//1963
		[0, "0213", "0314", "0412", "0512", "0610", "0709", "0808", "0906", "1006", "1104", "1204", "1303"], 	//1964
		[0, "0202", "0303", "0402", "0501", "0531", "0629", "0728", "0827", "0925", "1024", "1123", "1223"], 	//1965
		[3, "0121", "0220", "0322", "0421", "0520", "0619", "0718", "0816", "0915", "1014", "1112", "1212", "1311"], 	//1966
		[0, "0209", "0311", "0410", "0509", "0608", "0708", "0806", "0904", "1004", "1102", "1202", "1231"], 	//1967
		[7, "0130", "0228", "0329", "0427", "0527", "0626", "0725", "0824", "0922", "1022", "1120", "1220", "1318"], 	//1968
		[0, "0217", "0318", "0417", "0516", "0615", "0714", "0813", "0912", "1011", "1110", "1209", "1308"], 	//1969
		[0, "0206", "0308", "0406", "0505", "0604", "0703", "0802", "0901", "0930", "1030", "1129", "1228"], 	//1970
		[5, "0127", "0225", "0327", "0425", "0524", "0623", "0722", "0821", "0919", "1019", "1118", "1218", "1316"], 	//1971
		[0, "0215", "0315", "0414", "0513", "0611", "0711", "0809", "0908", "1007", "1106", "1206", "1304"], 	//1972
		[0, "0203", "0305", "0403", "0503", "0601", "0630", "0730", "0828", "0926", "1026", "1125", "1224"], 	//1973
		[4, "0123", "0222", "0324", "0422", "0522", "0620", "0719", "0818", "0916", "1015", "1114", "1214", "1312"], 	//1974
		[0, "0211", "0313", "0412", "0511", "0610", "0709", "0807", "0906", "1005", "1103", "1203", "1301"], 	//1975
		[8, "0131", "0301", "0331", "0429", "0529", "0627", "0727", "0825", "0924", "1023", "1121", "1221", "1319"], 	//1976
		[0, "0218", "0320", "0418", "0518", "0617", "0716", "0815", "0913", "1013", "1111", "1211", "1309"], 	//1977
		[0, "0207", "0309", "0407", "0507", "0606", "0705", "0804", "0902", "1002", "1101", "1130", "1230"], 	//1978
		[6, "0128", "0227", "0328", "0426", "0526", "0624", "0724", "0823", "0921", "1021", "1120", "1219", "1318"], 	//1979
		[0, "0216", "0317", "0415", "0514", "0613", "0712", "0811", "0909", "1009", "1108", "1207", "1306"], 	//1980
		[0, "0205", "0306", "0405", "0504", "0602", "0702", "0731", "0829", "0928", "1028", "1126", "1226"], 	//1981
		[4, "0125", "0224", "0325", "0424", "0523", "0621", "0721", "0819", "0917", "1017", "1115", "1215", "1314"], 	//1982
		[0, "0213", "0315", "0413", "0513", "0611", "0710", "0809", "0907", "1006", "1105", "1204", "1303"], 	//1983
		[10, "0202", "0303", "0401", "0501", "0531", "0629", "0728", "0827", "0925", "1024", "1123", "1222", "1321"], 	//1984
		[0, "0220", "0321", "0420", "0520", "0618", "0718", "0816", "0915", "1014", "1112", "1212", "1310"], 	//1985
		[0, "0209", "0310", "0409", "0509", "0607", "0707", "0806", "0904", "1004", "1102", "1202", "1231"], 	//1986
		[6, "0129", "0228", "0329", "0428", "0527", "0626", "0726", "0824", "0923", "1023", "1121", "1221", "1319"], 	//1987
		[0, "0217", "0318", "0416", "0516", "0614", "0714", "0812", "0911", "1011", "1109", "1209", "1308"], 	//1988
		[0, "0206", "0308", "0406", "0505", "0604", "0703", "0802", "0831", "0930", "1029", "1128", "1228"], 	//1989
		[5, "0127", "0225", "0327", "0425", "0524", "0623", "0722", "0820", "0919", "1018", "1117", "1217", "1316"], 	//1990
		[0, "0215", "0316", "0415", "0514", "0612", "0712", "0810", "0908", "1008", "1106", "1206", "1305"], 	//1991
		[0, "0204", "0304", "0403", "0503", "0601", "0630", "0730", "0828", "0926", "1026", "1124", "1224"], 	//1992
		[3, "0123", "0221", "0323", "0422", "0521", "0620", "0719", "0818", "0916", "1015", "1114", "1213", "1312"], 	//1993
		[0, "0210", "0312", "0411", "0511", "0609", "0709", "0807", "0906", "1005", "1103", "1203", "1301"], 	//1994
		[8, "0131", "0301", "0331", "0430", "0529", "0628", "0727", "0826", "0925", "1024", "1122", "1222", "1320"], 	//1995
		[0, "0219", "0319", "0418", "0517", "0616", "0715", "0814", "0912", "1012", "1111", "1211", "1309"], 	//1996
		[0, "0207", "0309", "0407", "0507", "0605", "0705", "0803", "0902", "1002", "1031", "1130", "1230"], 	//1997
		[5, "0128", "0227", "0328", "0426", "0526", "0624", "0723", "0822", "0921", "1020", "1119", "1219", "1317"], 	//1998
		[0, "0216", "0318", "0416", "0515", "0614", "0713", "0811", "0910", "1009", "1108", "1208", "1307"], 	//1999
		[0, "0205", "0306", "0405", "0504", "0602", "0702", "0731", "0829", "0928", "1027", "1126", "1226"], 	//2000
		[4, "0124", "0223", "0325", "0423", "0523", "0621", "0721", "0819", "0917", "1017", "1115", "1215", "1313"], 	//2001
		[0, "0212", "0314", "0413", "0512", "0611", "0710", "0809", "0907", "1006", "1105", "1204", "1303"], 	//2002
		[0, "0201", "0303", "0402", "0501", "0531", "0630", "0729", "0828", "0926", "1025", "1124", "1223"], 	//2003
		[2, "0122", "0220", "0321", "0419", "0519", "0618", "0717", "0816", "0914", "1014", "1112", "1212", "1310"], 	//2004
		[0, "0209", "0310", "0409", "0508", "0607", "0706", "0805", "0904", "1003", "1102", "1201", "1231"], 	//2005
		[7, "0129", "0228", "0329", "0428", "0527", "0626", "0725", "0824", "0922", "1022", "1121", "1220", "1319"], 	//2006
		[0, "0218", "0319", "0417", "0517", "0615", "0714", "0813", "0911", "1011", "1110", "1210", "1308"], 	//2007
		[0, "0207", "0308", "0406", "0505", "0604", "0703", "0801", "0831", "0929", "1029", "1128", "1227"], 	//2008
		[5, "0126", "0225", "0327", "0425", "0524", "0623", "0722", "0820", "0919", "1018", "1117", "1216", "1315"], 	//2009
		[0, "0214", "0316", "0414", "0514", "0612", "0712", "0810", "0908", "1008", "1106", "1206", "1304"], 	//2010
		[0, "0203", "0305", "0403", "0503", "0602", "0701", "0731", "0829", "0927", "1027", "1125", "1225"], 	//2011
		[4, "0123", "0222", "0322", "0421", "0521", "0619", "0719", "0817", "0916", "1015", "1114", "1213", "1312"], 	//2012
		[0, "0210", "0312", "0410", "0510", "0608", "0708", "0807", "0905", "1005", "1103", "1203", "1301"], 	//2013
		[9, "0131", "0301", "0331", "0429", "0529", "0627", "0727", "0825", "0924", "1024", "1122", "1222", "1320"], 	//2014
		[0, "0219", "0320", "0419", "0518", "0616", "0716", "0814", "0913", "1013", "1112", "1211", "1310"], 	//2015
		[0, "0208", "0309", "0407", "0507", "0605", "0704", "0803", "0901", "1001", "1031", "1129", "1229"], 	//2016
		[6, "0128", "0226", "0328", "0426", "0526", "0624", "0723", "0822", "0920", "1020", "1118", "1218", "1317"], 	//2017
		[0, "0216", "0317", "0416", "0515", "0614", "0713", "0811", "0910", "1009", "1108", "1207", "1306"], 	//2018
		[0, "0205", "0307", "0405", "0505", "0603", "0703", "0801", "0830", "0929", "1028", "1126", "1226"], 	//2019
		[4, "0125", "0223", "0324", "0423", "0523", "0621", "0721", "0819", "0917", "1017", "1115", "1215", "1313"], 	//2020
		[0, "0212", "0313", "0412", "0512", "0610", "0710", "0808", "0907", "1006", "1105", "1204", "1303"], 	//2021
		[0, "0201", "0303", "0401", "0501", "0530", "0629", "0729", "0827", "0926", "1025", "1124", "1223"], 	//2022
		[2, "0122", "0220", "0322", "0420", "0519", "0618", "0718", "0816", "0915", "1015", "1113", "1213", "1311"], 	//2023
		[0, "0210", "0310", "0409", "0508", "0606", "0706", "0804", "0903", "1003", "1101", "1201", "1231"], 	//2024
		[6, "0129", "0228", "0329", "0428", "0527", "0625", "0725", "0823", "0922", "1021", "1120", "1220", "1319"], 	//2025
		[0, "0217", "0319", "0417", "0517", "0615", "0714", "0813", "0911", "1010", "1109", "1209", "1308"], 	//2026
		[0, "0206", "0308", "0407", "0506", "0605", "0704", "0802", "0901", "0930", "1029", "1128", "1228"], 	//2027
		[5, "0126", "0225", "0326", "0425", "0524", "0623", "0722", "0820", "0919", "1018", "1116", "1216", "1315"], 	//2028
		[0, "0213", "0315", "0414", "0513", "0612", "0711", "0810", "0908", "1008", "1106", "1205", "1304"], 	//2029
		[0, "0203", "0304", "0403", "0502", "0601", "0701", "0730", "0829", "0927", "1027", "1125", "1225"], 	//2030
		[3, "0123", "0221", "0323", "0422", "0521", "0620", "0719", "0818", "0917", "1016", "1115", "1214", "1313"], 	//2031
		[0, "0211", "0312", "0410", "0509", "0608", "0707", "0806", "0905", "1004", "1103", "1203", "1301"], 	//2032
		[7, "0131", "0301", "0331", "0429", "0528", "0627", "0726", "0825", "0923", "1023", "1122", "1222", "1320"], 	//2033
		[0, "0219", "0320", "0419", "0518", "0616", "0716", "0814", "0913", "1012", "1111", "1211", "1309"], 	//2034
		[0, "0208", "0310", "0408", "0508", "0606", "0705", "0804", "0902", "1001", "1031", "1130", "1229"], 	//2035
		[6, "0128", "0227", "0328", "0426", "0526", "0624", "0723", "0822", "0920", "1019", "1118", "1217", "1316"], 	//2036
		[0, "0215", "0317", "0416", "0515", "0614", "0713", "0811", "0910", "1009", "1107", "1207", "1305"], 	//2037
		[0, "0204", "0306", "0405", "0504", "0603", "0702", "0801", "0830", "0929", "1028", "1126", "1226"], 	//2038
		[5, "0124", "0223", "0325", "0423", "0523", "0622", "0721", "0820", "0918", "1018", "1116", "1216", "1314"], 	//2039
		[0, "0212", "0313", "0411", "0511", "0610", "0709", "0808", "0906", "1006", "1105", "1204", "1303"], 	//2040
		[0, "0201", "0302", "0401", "0430", "0530", "0628", "0728", "0827", "0925", "1025", "1124", "1223"], 	//2041
		[2, "0122", "0220", "0322", "0420", "0519", "0618", "0717", "0816", "0914", "1014", "1113", "1212", "1311"], 	//2042
		[0, "0210", "0311", "0410", "0509", "0607", "0707", "0805", "0903", "1003", "1102", "1201", "1231"], 	//2043
		[7, "0130", "0229", "0329", "0428", "0527", "0625", "0725", "0823", "0921", "1021", "1119", "1219", "1318"], 	//2044
		[0, "0217", "0319", "0417", "0517", "0615", "0714", "0813", "0911", "1010", "1109", "1208", "1307"], 	//2045
		[0, "0206", "0308", "0406", "0506", "0604", "0704", "0802", "0901", "0930", "1029", "1128", "1227"], 	//2046
		[5, "0126", "0225", "0326", "0425", "0525", "0623", "0723", "0821", "0920", "1019", "1117", "1217", "1315"], 	//2047
		[0, "0214", "0314", "0413", "0513", "0611", "0711", "0810", "0908", "1008", "1106", "1205", "1304"], 	//2048
		[0, "0202", "0304", "0402", "0502", "0531", "0630", "0730", "0828", "0927", "1027", "1125", "1225"], 	//2049
		[3, "0123", "0221", "0323", "0421", "0521", "0619", "0719", "0817", "0916", "1016", "1114", "1214", "1313"], 	//2050
		[0, "0211", "0313", "0411", "0510", "0609", "0708", "0806", "0905", "1005", "1103", "1203", "1302"], 	//2051
		[8, "0201", "0301", "0331", "0429", "0528", "0627", "0726", "0824", "0923", "1022", "1121", "1221", "1320"], 	//2052
		[0, "0219", "0320", "0419", "0518", "0616", "0716", "0814", "0912", "1012", "1110", "1210", "1309"], 	//2053
		[0, "0208", "0309", "0408", "0508", "0606", "0705", "0804", "0902", "1001", "1031", "1129", "1229"], 	//2054
		[6, "0128", "0226", "0328", "0427", "0526", "0625", "0724", "0823", "0921", "1020", "1119", "1218", "1317"], 	//2055
		[0, "0215", "0316", "0415", "0515", "0613", "0713", "0811", "0910", "1009", "1107", "1207", "1305"], 	//2056
		[0, "0204", "0305", "0404", "0504", "0602", "0702", "0731", "0830", "0929", "1028", "1126", "1226"], 	//2057
		[4, "0124", "0223", "0324", "0423", "0522", "0621", "0720", "0819", "0918", "1017", "1116", "1216", "1314"], 	//2058
		[0, "0212", "0314", "0412", "0512", "0610", "0710", "0808", "0907", "1006", "1105", "1205", "1304"], 	//2059
		[0, "0202", "0303", "0401", "0501", "0530", "0628", "0727", "0826", "0924", "1024", "1123", "1223"], 	//2060
		[3, "0121", "0220", "0322", "0420", "0519", "0618", "0717", "0815", "0914", "1013", "1112", "1212", "1311"], 	//2061
		[0, "0209", "0311", "0410", "0509", "0607", "0707", "0805", "0903", "1003", "1101", "1201", "1231"], 	//2062
		[7, "0129", "0228", "0330", "0428", "0528", "0626", "0726", "0824", "0922", "1022", "1120", "1220", "1318"], 	//2063
		[0, "0217", "0318", "0417", "0516", "0615", "0714", "0813", "0911", "1010", "1109", "1208", "1307"], 	//2064
		[0, "0205", "0307", "0406", "0505", "0604", "0704", "0802", "0901", "0930", "1029", "1128", "1227"], 	//2065
		[5, "0126", "0224", "0326", "0424", "0524", "0623", "0722", "0821", "0919", "1019", "1117", "1217", "1315"], 	//2066
		[0, "0214", "0315", "0414", "0513", "0612", "0711", "0810", "0909", "1008", "1107", "1206", "1305"], 	//2067
		[0, "0203", "0304", "0402", "0502", "0531", "0629", "0729", "0828", "0926", "1026", "1125", "1224"], 	//2068
		[4, "0123", "0221", "0323", "0421", "0521", "0619", "0718", "0817", "0915", "1015", "1114", "1214", "1312"], 	//2069
		[0, "0211", "0312", "0411", "0510", "0609", "0708", "0806", "0905", "1004", "1103", "1203", "1301"], 	//2070
		[8, "0131", "0302", "0331", "0430", "0529", "0628", "0727", "0825", "0924", "1023", "1122", "1221", "1320"], 	//2071
		[0, "0219", "0320", "0418", "0518", "0616", "0716", "0814", "0912", "1012", "1110", "1210", "1308"], 	//2072
		[0, "0207", "0309", "0407", "0507", "0605", "0704", "0803", "0901", "0930", "1030", "1128", "1228"], 	//2073
		[6, "0126", "0225", "0326", "0425", "0525", "0623", "0723", "0821", "0920", "1019", "1118", "1217", "1316"], 	//2074
		[0, "0214", "0316", "0414", "0514", "0612", "0712", "0811", "0909", "1009", "1107", "1207", "1305"], 	//2075
		[0, "0204", "0304", "0403", "0502", "0601", "0630", "0730", "0828", "0927", "1027", "1125", "1225"], 	//2076
		[0, "0123", "0222", "0323", "0422", "0521", "0620", "0719", "0818", "0917", "1017", "1115", "1215"], 	//2077
		[0, "0113", "0212", "0313", "0412", "0511", "0609", "0709", "0807", "0906", "1006", "1104", "1204"], 	//2078
		[0, "0103", "0201", "0303", "0401", "0501", "0530", "0628", "0728", "0826", "0925", "1024", "1123"], 	//2079
		[3, "1223", "0122", "0220", "0321", "0419", "0519", "0617", "0716", "0815", "0913", "1012", "1111", "1211"], 	//2080
		[0, "0110", "0208", "0310", "0409", "0508", "0607", "0706", "0804", "0903", "1002", "1031", "1130"], 	//2081
		[7, "1230", "0128", "0227", "0329", "0428", "0527", "0625", "0725", "0823", "0922", "1021", "1119", "1219"], 	//2082
		[0, "0118", "0216", "0318", "0417", "0516", "0615", "0714", "0813", "0911", "1011", "1109", "1209"], 	//2083
		[0, "0107", "0206", "0306", "0405", "0504", "0603", "0703", "0801", "0831", "0929", "1029", "1127"], 	//2084
		[5, "1227", "0125", "0224", "0325", "0423", "0523", "0622", "0721", "0820", "0919", "1018", "1117", "1216"], 	//2085
		[0, "0115", "0213", "0315", "0413", "0512", "0611", "0710", "0809", "0908", "1007", "1106", "1206"], 	//2086
		[0, "0104", "0203", "0304", "0403", "0502", "0531", "0630", "0729", "0828", "0926", "1026", "1125"], 	//2087
		[4, "1225", "0123", "0222", "0322", "0421", "0520", "0618", "0718", "0816", "0914", "1014", "1113", "1213"], 	//2088
		[0, "0111", "0210", "0312", "0410", "0510", "0608", "0707", "0806", "0904", "1003", "1102", "1202"], 	//2089
		[8, "1231", "0130", "0301", "0331", "0429", "0529", "0627", "0726", "0825", "0923", "1022", "1121", "1221"], 	//2090
		[0, "0119", "0218", "0320", "0418", "0518", "0616", "0716", "0814", "0913", "1012", "1110", "1210"], 	//2091
		[0, "0108", "0207", "0308", "0406", "0506", "0605", "0704", "0803", "0901", "1001", "1030", "1129"], 	//2092
		[6, "1228", "0126", "0225", "0327", "0425", "0525", "0623", "0723", "0822", "0920", "1020", "1118", "1218"], 	//2093
		[0, "0116", "0214", "0316", "0414", "0514", "0612", "0712", "0811", "0909", "1009", "1108", "1207"], 	//2094
		[0, "0106", "0204", "0306", "0404", "0503", "0602", "0701", "0731", "0829", "0928", "1028", "1127"], 	//2095
		[4, "1226", "0125", "0223", "0324", "0422", "0521", "0620", "0719", "0817", "0916", "1016", "1115", "1214"], 	//2096
		[0, "0113", "0212", "0313", "0412", "0511", "0609", "0709", "0807", "0905", "1005", "1104", "1203"], 	//2097
		[0, "0102", "0201", "0303", "0401", "0501", "0530", "0628", "0727", "0826", "0924", "1024", "1122"], 	//2098
		[2, "1222", "0121", "0220", "0321", "0420", "0520", "0618", "0717", "0816", "0914", "1013", "1112", "1211"] 	//2099
	];
	var _holiday = [
		{
			k: "除夕",
			m: 12,
			d: "last"
		},
		{
			k: "(元宵)|(上元)",
			m: 1,
			d: 15
		},{
			k: "端午",
			m: 5,
			d: 5
		},{
			k: "中秋",
			m: 8,
			d: 15
		},{
			k: "七夕",
			m: 7,
			d: 7
		},{
			k: "腊八",
			m: 12,
			d: 8
		}, {
			k: "重阳",
			m: 9,
			d: 9
		}
	];

	var minYear = 1900;
	var _lunar = function(){};

	_lunar.dateAdd = function(date, expr) {
		var fmtData = expr.dateExpression();
		if (!fmtData || fmtData.interval == 0) {
			return date;
		};
		var solar;
		switch (fmtData.interval) {
			case "y":
				var result = {};
				$.extend(true, result, date);
				result.y += fmtData.number;
				return result;
			case "m":
				return _lunar.monthAdd(date, fmtData.number);
			default:
				//先转成公历，用公历计算，天及以下没有农历
				solar = _lunar.lunarToSolar(date).dateDiff(expr);
				//再把农历转到公历
				return _lunar.solarToLunar(solar);
		}
	};

	_lunar.dateDiff = function(date1, date2, expr) {
		var solar1, solar2;
		switch (expr) {
			case "m":
				return _lunar.monthDiff(date1, date2);
			default:
				//先转成公历，用公历计算，天及以下没有农历
				solar1 = _lunar.lunarToSolar(date1).dateDiff(expr);
				solar2 = _lunar.lunarToSolar(date2).dateDiff(expr);
				//再把农历转到公历
				return solar1.dateDiff(date2, expr);
		}
	};

	_lunar.monthAdd = function(date, num) {
		if (date instanceof Date) date = _lunar.solarToLunar(date);
		if (num == 0) return date;
		var y = date.y, count;
		var m = (date.isLeapMonth || (date.leapMonth > 0 && date.m > date.leapMonth)) ? date.m + 1 : date.m;

		var run = true;
		do {
			count = _lunar.monthsOfYear(y);           //计算当前年有多少个月
			num = num + m - count;
			if (num <= 0) {
				run = false;
				m = y == date.y ? count + num : count + num - m;
			}
			else {
				y++;
				m = 1;
			}
		} while (run);

		//获取最后的结果年的闰月是哪一个月
		var leapMonth = _lunar.leapMonthOfYear(y);
		var isLeapMonth = false;
		//如果闰月大于农历月，则月份减1
		if (leapMonth > 0 && m > leapMonth) {
			m--;
			//如果减完后月份和闰月相等，表示是闰月
			isLeapMonth = m == leapMonth;
		}

		return {
			y: y,
			m: m,
			isLeapMonth: isLeapMonth,
			leapMonth: leapMonth
		};
	};

	/*
	 * 返回两段日期的农历差了多少个月，因为有闰月，所以和公历不一样
	 */
	_lunar.monthDiff = function(date1, date2) {
		//如果是公历的日期格式，则转换为农历
		var count = 0;
		if (date1 instanceof Date) date1 = _lunar.solarToLunar(date1);
		if (date2 instanceof Date) date2 = _lunar.solarToLunar(date2);
		//两个日期是同一年
		if (date1.y == date2.y) {
			count = date2.m - date1.m;
			//中间有闰月的存在
			if (date1.leapMonth >= date1.m && date1.leapMonth <= date2.m) count++;
		} else {
			//计算首年，如果当前的闰月大于当前月，或者当前年有闰月且当前月等于闰月，但当前月又不是闰月，则要多添加一个月
			count = (date1.leapMonth > date1.m || (date1.leapMonth == date1.m && !date1.isLeaMonth) ? 13 : 12) - date1.m;
			//计算两年之间中间的年月份
			var year = date1.y + 1;
			for (var i = year; i < date2.y; i++) {
				count += _lunar.monthsOfYear(year++);
			}
			//计算最后一年
			count += date2.m;
			if (date2.isLeapMonth || date2.m < date2.leapMonth) count++;
		}
		return count;
	};

	/*
	 * 计算某年某月一个有多少天
	 */
	_lunar.daysOfMonth = function(year, month, isLeapMonth) {
		if (typeof (year) == "object") {
			month = year.m;
			isLeapMonth = year.isLeapMonth;
			year = year.y;
		}
		var date1 = _lunar.lunarToSolar(year, month, 1, isLeapMonth);
		var leapMonth = _lunar.leapMonthOfYear(year);
		if (leapMonth == month && !isLeapMonth) {
			//如果是闰月和当前一月一至，且当前月不是闰月，说明下一个月是闰月，例如2009年5月，这一年闰5月，如果传过来的不是闰月，那么下一个月就是闰月
			isLeapMonth = true;
		} else if (month == 12) {
			//农历的最后一个月
			year++;
			month = 1;
		} else {
			isLeapMonth = false;
			month++;
		}
		var date2 = _lunar.lunarToSolar(year, month, 1, isLeapMonth);
		return date2.dateDiff("d", date1);

	};

	//获取农历某一年有多少个月
	_lunar.monthsOfYear = function(year) {
		return lunarInfo[year - minYear].length - 1;
	};

	//获取农历某年的闰月是几月，
	_lunar.leapMonthOfYear = function(year) {
		var info = lunarInfo[year - minYear];
		return info ? info[0] : 0;
	};
	//农历转阳历
	/*
	 year:农历的年
	 month: 农历的月
	 day: 农历的天
	 isLeap:是否闰月
	 */
	_lunar.lunarToSolar = function(year, month, day, isLeap, hour, minutes, second, milliseconds) {
		if (typeof (year) == "object") {
			month = year.m;
			day = year.d;
			isLeap = year.isLeapMonth;
			year = year.y;
			hour = year.hour,
			minutes = year.minutes,
			second = year.second,
			milliseconds = year.milliseconds
		};

		//非字符的月份，检测节日
		if(!month.toString().isNumber()){
			//检查是否属于节日
			_holiday.forEach(function(item, index){
				var reg = new RegExp(item.k + "[节|節]?");
				if(reg.test(month)){
					month = item.m;
					day = item.d;
					if(day == "last"){
						day = _lunar.daysOfMonth(year, month, false);
					};
					return true;
				};
			});
		};


		var index = year - minYear;
		if (index < 0 || index > lunarInfo.length) return false;
		var leapMonth = lunarInfo[index][0];
		//如果isLeap=true，并且当前月份就是闰月，或者本月有闰月，且当前月份大于闰月，则月份需要加1
		if ((isLeap && month == leapMonth) || (leapMonth > 0 && month > leapMonth)) month++;
		var info = lunarInfo[index][month]; 		//农历第一天对应公历的具体天
		var m = Number(info.substring(0, 2))
		var d = Number(info.substring(2, 4));
		var y = year;
		if (m > 12) {
			y++;
			m -= 12;
		}
		//console.log(new Date(y, m - 1, d).format("yyyy-MM-dd"));
		hour = hour || 0;
		minutes = minutes || 0;
		second = second || 0;
		milliseconds = milliseconds || 0;
		return new Date(y, m - 1, d, hour, minutes, second, milliseconds).dateAdd("+{0}d".format(day - 1));
	};

	//公历转农历
	_lunar.solarToLunar = function(date, expr) {
		var month = date.getMonth() + 1, year = date.getFullYear(), day = date.getDate();
		var hour = date.getHours(), minutes = date.getMinutes(), second = date.getSeconds(), ms = date.getMilliseconds();
		var newDate = new Date(year, month - 1, day);
		/*
		 isPerYear，是否为农历前一年的对应数据
		 */
		function findLunar(info, minMonth, maxMonth, isPerLunarYear) {
			if (!info) return false;
			var y = year, data = false, m, d, isFind, lunarMonth, lunarYear, m1;
			//查找当年的
			for (var i = info.length - 1; i > 0; i--) {
				lunarMonth = i;
				m = Number(info[i].substring(0, 2));
				d = Number(info[i].substring(2, 4));
				m1 = isPerLunarYear && m > 12 ? m - 12 : m;
				isFind = m1 < month || (m1 == month && d <= day) ||
					((m <= minMonth || m >= maxMonth) && isPerLunarYear);
				if ((m1 == 12 && m1 > month && i == 1)) {
					isFind = true;
					y--;
				}
				if (isFind) break;
			}

			//如果找到，则赋值
			if (isFind) {
				if (isPerLunarYear && m == 12) y = y - 1;
				data = {
					y: y,
					m: m1,
					d: d,
					minutes: minutes,
					hour: hour,
					second: second,
					milliseconds: ms,
					lunarYear: isPerLunarYear ? year - 1 : year,
					lunarMonth: lunarMonth,
					leapMonth: info[0]
				}
			}
			return data;
		};
		var index = year - minYear;
		//超出范围
		var data = findLunar(lunarInfo[index], 0, 13, false) ||
			findLunar(lunarInfo[index - 1], 12, 99, true);
		if (!data) return false; 		//超出范围
		//农历初一对应公历的哪一天
		var tmpDate = new Date(data.y, data.m - 1, data.d);
		//因为数据对应的农历初一，所以需要加上这一天
		var span = newDate.dateDiff("d", tmpDate) + 1;

		//返回的结果
		var result = {
			isLeapMonth: data.leapMonth > 0 && data.leapMonth + 1 == data.lunarMonth,
			y: data.lunarYear,
			m: data.leapMonth > 0 && data.lunarMonth > data.leapMonth ? data.lunarMonth - 1 : data.lunarMonth,
			d: newDate.dateDiff("d", tmpDate) + 1,
			leapMonth: data.leapMonth
		};
		//console.dir(result);
		return (expr && result) ? _lunar.format(result, expr) : result;
	};

	//获取中国年份的名称
	_lunar.traditionalYearName = function(y) {
		var Gan = "甲乙丙丁戊己庚辛壬癸".split("");
		var Zhi = "子丑寅卯辰巳午未申酉戌亥".split("");
		y = y - 1900 + 36;
		return (Gan[y % 10] + Zhi[y % 12] + "年");
	};

	_lunar.yearName = function(y) {
		var cnStr = '〇,一,二,三,四,五,六,七,八,九'.split(",");
		var cYear = y.toString();
		var result = '';
		for (var i = 0; i < cYear.length; i++) {
			result += cnStr[parseInt(cYear.charAt(i))];
		}
		return result + '年';
	};

	//获取中国的生肖
	_lunar.animalName = function(y) {
		return "鼠牛虎兔龙蛇马羊猴鸡狗猪".split("")[(y - 4) % 12];
	};

	//获取农历月的名称
	_lunar.monthName = function(m, traditional, isLeapMonth) {
		var monthName = "正,二,三,四,五,六,七,八,九,十,十一,十二".split(",");
		if (traditional) { monthName[11] = "腊" }
		return (isLeapMonth ? "闰" : "") + monthName[m - 1] + "月";
	};

	_lunar.holiday = function(date) {
		if (date.m == 5 && date.d == 5) {
			return "端午";
		} else if (date.m = 1 && date.d == 1) {
			return "大年初一";
		} else if (date.m == 8 && date.d == 15) {
			return "中秋";
		} else if (date.m == 1 && date.d == 15) {
			return "元宵";
		} else if (date.m == 7 && date.d == 7) {
			return "中国情人节";
		}

		return "";
	};

	//获取农历天的名称
	_lunar.dayName = function(d) {
		switch (d) {
			case 10: return '初十';
			case 20: return '二十';
			case 30: return '三十';
			default: return ("初十廿卅".split("")[Math.floor(d / 10)] +
				"一二三四五六七八九十".split("")[(d - 1) % 10]) || d;
		}
	};

	//格式化农历日期，date是农历的日期
	_lunar.format = function(date, expr) {
		return expr.replace(/[TAYyMmdD]/g, function(m, i) {
			switch (m) {
				//获取传统的年
				case "T": return _lunar.traditionalYearName(date.y);
				//获取生肖
				case "A": return _lunar.animalName(date.y);
				//获取中文的年
				case "Y": return _lunar.yearName(date.y);
				//获取数字年
				case "y": return date.y;
				//获取月份
				case "m": return _lunar.monthName(date.m, false, date.isLeapMonth);
				//获取传统的月
				case "M": return _lunar.monthName(date.m, true, date.isLeapMonth);
				//获取天
				case "d": return _lunar.dayName(date.d);
				//如果是初一，则显示月，而不是显示
				case "D": return (date.d == 1) ? _lunar.monthName(date.m, false, date.isLeapMonth) : _lunar.dayName(date.d);
			}
		});
	};

	if(typeof exports === 'object'){
		exports.chineseLunar = _lunar();
	}else{
		chineseLunar = _lunar;
	};
})();